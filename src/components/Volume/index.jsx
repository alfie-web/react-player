import React, { Fragment, useState, useEffect } from 'react';

// Вынести ещё и стили
// Благодаря томо что вынес в отдельный компонент, будет перерисовываться только он, а не родитель с кучей логики
export default function Volume({ mediaRef, startVolume }) {
	const [currentVolume, setCurrentVolume] = useState(startVolume);
	const [isMuted, setIsMuted] = useState(false);

	// Эти 2 метода можно как-то порефакторить
	const setVolume = (value) => {
		let val = value;
		setCurrentVolume(val)

		mediaRef.current.volume = val / 100;
		if (val <= 0) {
			setIsMuted(true);
		} else {
			isMuted && setIsMuted(false);
		}
	}

	const muteVolume = () => {
		if (+currentVolume === 0) return;
		if (!isMuted) {
			mediaRef.current.volume = 0;
		} else {
			mediaRef.current.volume = currentVolume / 100;
		}
		setIsMuted(!isMuted);
	}

	useEffect(() => {
		// console.log('Выполнится один раз при инициализации')
		mediaRef.current.volume = startVolume / 100;
	}, [mediaRef, startVolume])

	return (
		<Fragment>
			<div className="Player__mute Player__btn" title={!isMuted ? 'Без звука' : 'Вернуть звук'} onClick={muteVolume}>
				<svg viewBox="0 0 22 22" xmlns="http://www.w3.org/2000/svg">
					<path d="M9.82842 17.1859C9.58517 17.3264 9.28543 17.3264 9.04213 17.1859L3.72224 14.1469H0.78629C0.352027 14.1469 0 13.7949 0 13.3607V8.64305C0 8.20878 0.352027 7.85676 0.78629 7.85676H3.72224L9.04531 4.81544C9.4224 4.60006 9.90264 4.73113 10.118 5.10817C10.1858 5.2269 10.2215 5.3612 10.2215 5.49793V16.5058C10.2213 16.7864 10.0714 17.0456 9.82842 17.1859ZM8.64901 6.85347L4.32448 9.32554C4.20479 9.394 4.0692 9.4298 3.93136 9.42934H1.57253V12.5745H3.93136C4.06925 12.574 4.20483 12.6098 4.32448 12.6782L8.64901 15.1503V6.85347Z"/>
					{ !isMuted && currentVolume >= 25 && <path d="M13.1929 13.8537C12.9207 14.1914 12.4264 14.2449 12.0882 13.9732C11.7497 13.7012 11.6958 13.2063 11.9678 12.8678C11.9678 12.8678 11.9679 12.8677 11.9679 12.8677C12.781 11.7567 12.781 10.2471 11.9679 9.13606C11.6937 8.79928 11.7446 8.30402 12.0813 8.0299C12.4181 7.75578 12.9134 7.80659 13.1875 8.14337C13.1893 8.14558 13.1911 8.14779 13.1929 8.15005C14.4793 9.83366 14.4793 12.17 13.1929 13.8537Z"/>}
					{ !isMuted && currentVolume >= 50 && <path d="M16.338 16.2125C16.0658 16.5503 15.5715 16.6037 15.2333 16.332C14.8948 16.06 14.8409 15.5651 15.113 15.2266C15.113 15.2266 15.113 15.2265 15.113 15.2266C16.9859 12.7215 16.9859 9.28226 15.113 6.77721C14.8389 6.44043 14.8897 5.94517 15.2265 5.67105C15.5633 5.39693 16.0585 5.44774 16.3326 5.78452C16.3344 5.78673 16.3362 5.78894 16.338 5.7912C18.6482 8.88094 18.6482 13.1228 16.338 16.2125Z"/>}
					{ !isMuted && currentVolume >= 75 && <path d="M19.483 18.5713C19.2108 18.9091 18.7165 18.9626 18.3783 18.6908C18.0398 18.4188 17.9859 17.9239 18.258 17.5854C18.258 17.5854 18.258 17.5854 18.258 17.5853C21.1767 13.6815 21.1767 8.32209 18.258 4.41837C17.9839 4.08159 18.0347 3.58633 18.3715 3.31221C18.7083 3.03809 19.2035 3.08891 19.4777 3.42568C19.4795 3.4279 19.4812 3.43011 19.483 3.43237C22.8389 7.92081 22.8389 14.083 19.483 18.5713Z"/>}
					{ isMuted && <Fragment>
						<path d="M16.7037 8.24896C17.0357 7.91701 17.5739 7.91701 17.9058 8.24896C18.2378 8.5809 18.2378 9.1191 17.9058 9.45104L13.451 13.9058C13.1191 14.2378 12.5809 14.2378 12.249 13.9058C11.917 13.5739 11.917 13.0357 12.249 12.7037L16.7037 8.24896Z"/>
						<path d="M12.249 9.45105C11.917 9.1191 11.917 8.58091 12.249 8.24897C12.5809 7.91702 13.1191 7.91702 13.451 8.24897L17.9058 12.7037C18.2378 13.0357 18.2378 13.5739 17.9058 13.9058C17.5739 14.2378 17.0357 14.2378 16.7037 13.9058L12.249 9.45105Z"/>
					</Fragment> }
				</svg>
			</div>

			<div className="Player__volume">
				<span className="volume-moved" style={{ width: !isMuted ? currentVolume + '%' : 0 }}></span>
				<input 
					className="volume" 
					type="range" 
					min="0" 
					max="100" 
					onChange={e => setVolume(e.target.value)}
					value={currentVolume}
				/>
			</div>
		</Fragment>
	)
}
